package com.sdase.malware.scanner.service.impl;

import static org.junit.jupiter.api.Assertions.*;

import com.sdase.malware.scanner.service.UrlChecker;
import org.junit.jupiter.api.Test;

/**
 * Unit tests for the {@link UrlTypeCheckerImpl} class.
 */
class UrlCheckerImplTest {

    private final UrlChecker urlChecker = new UrlCheckerImpl();

    /**
     * Tests if the UrlChecker allows valid URLs.
     */
    @Test
    public void testValidUrl() {
        assertTrue(urlChecker.isUrlValid("http://www.example.com"));
        assertTrue(urlChecker.isUrlValid("https://www.example.com/path/page.html"));
        assertTrue(urlChecker.isUrlValid("https://www.example.com/path/somthing.pdf"));
    }

    /**
     * Tests if the UrlChecker correctly rejects invalid URLs.
     */
    @Test
    public void testInvalidUrl() {
        assertFalse(urlChecker.isUrlValid("invalid-url"));
        assertFalse(urlChecker.isUrlValid("ftp://www.example.com"));
        assertFalse(urlChecker.isUrlValid("http://www.example.com/dangerous.exe"));
    }

    /**
     * Tests if the UrlChecker correctly rejects URLs with dangerous file extensions.
     */
    @Test
    public void testUrlWithDangerousExtension() {
        assertFalse(urlChecker.isUrlValid("http://www.example.com/path/malicious.bat"));
        assertFalse(urlChecker.isUrlValid("https://www.example.com/evil.cmd"));
    }

    /**
     * Tests if the UrlChecker correctly allows URL after Sanitize it to prevent XSS attacks.
     */
    @Test
    public void testUrlWithXSSAttempt() {
        assertTrue(urlChecker.isUrlValid("http://www.example.com/<script>alert('XSS')</script>"));
    }
}